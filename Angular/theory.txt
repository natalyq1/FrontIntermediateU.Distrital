Angular
Framework de desarrollo web para frontend besado en componentes
SPA- Single page application
Typescript
Trae su propia libreria para comunicarse con el backend
Angular es restrictivo con sus librerias

npm install -g @angular/cli

verificar
    ng version

crear proyecto
    ng new angular-expenses-tracker
    y
    SCSS
    cd angular-expenses-tracker

ng serve
ng serve --open ////este abre de una vez en navegador

main.ts---de donde arranca mi app

tenemos un INDEX.html que renderizar otros mini html que ya no necesitan la estructura del doctype, ya q el principal lo tiene y ahi se renderiza

CREA UN COMPONENTE EN APP
ng generate component components/balance
ng g c components/balance
****************************
Reactive Form
Formularios complejos, Ofrecen más control, Basados en clase Typescript
para forms 
//Libreria que viene con Angular para forms
    app.module.ts
        import { ReactiveFormsModule } from '@angular/forms';
             imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule],
    add-transaction.component.ts
        import { FormGroup } from '@angular/forms';
            export class AddTransactionComponent {
                AddTransactionFrom!: FormGroup}


Dependency Injection DI
DI permite declarar las dependencias de las clases sin ocuparse de la creación de instancias

Patrón de diseño que permite escribir código más flexible y menos dependiente de otras clases

Services

Un servicio es una categoría amplia que abarca cualquier valor, función o característica que necesita una aplicación

Un servicio es típicamente una clase con un propósito bien definido que puede ser usada por un componente utilizando DI


BACKEND--HTTPClientModule
    EN app.module.ts    
        import { HttpClientModule } from '@angular/common/http';
        imports: [
    BrowserModule,
    AppRoutingModule,
    ReactiveFormsModule,
    HttpClientModule,
  ],

en consola CLI
    ng generate service services/transactions
me crea una carpeta services con 2 archivos

////////////
Lazy Loading
Permite cargar recursos de una ruta sólo cuando el usuario navega a la ruta
    ng g m auth --routing
    ng g c auth/pages/signin

ng serve -- open
Initial Chunk Files            | Names            |  Raw Size
vendor.js                      | vendor           |   2.57 MB | 
polyfills.js                   | polyfills        | 333.18 kB | 
styles.css, styles.js          | styles           | 232.22 kB | 
main.js                        | main             |  65.30 kB | 
runtime.js                     | runtime          |  12.66 kB | 

                               | Initial Total    |   3.20 MB

Lazy Chunk Files               | Names            |  Raw Size
src_app_auth_auth_module_ts.js | auth-auth-module |   8.96 kB | 

http://localhost:4200/auth/signin



/////////////////
UNIT testing con Karma------ archivos .spec.ts
Ejecuta los tests de todos los archivos "spec.ts" de la aplicación
    ng test
da muchos errores porq prueba toda la aplicación

un componente
  ng test --include='src/app/components/balance'

  ng test --include='src/app/components/transactions'

  ng test --include='src/app/services'

  ng test --include='src/app/components/home'


