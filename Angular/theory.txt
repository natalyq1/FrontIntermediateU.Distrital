Angular
Framework de desarrollo web para frontend besado en componentes
SPA- Single page application
Typescript
Trae su propia libreria para comunicarse con el backend
Angular es restrictivo con sus librerias

npm install -g @angular/cli

verificar
    ng version

crear proyecto
    ng new angular-expenses-tracker
    y
    SCSS
    cd angular-expenses-tracker

ng serve
ng serve --open ////este abre de una vez en navegador

main.ts---de donde arranca mi app

tenemos un INDEX.html que renderizar otros mini html que ya no necesitan la estructura del doctype, ya q el principal lo tiene y ahi se renderiza

CREA UN COMPONENTE EN APP
ng generate component components/balance
ng g c components/balance
****************************
Reactive Form
Formularios complejos, Ofrecen más control, Basados en clase Typescript
para forms 
//Libreria que viene con Angular para forms
    app.module.ts
        import { ReactiveFormsModule } from '@angular/forms';
             imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule],
    add-transaction.component.ts
        import { FormGroup } from '@angular/forms';
            export class AddTransactionComponent {
                AddTransactionFrom!: FormGroup}


Dependency Injection DI
DI permite declarar las dependencias de las clases sin ocuparse de la creación de instancias

Patrón de diseño que permite escribir código más flexible y menos dependiente de otras clases

Services

Un servicio es una categoría amplia que abarca cualquier valor, función o característica que necesita una aplicación

Un servicio es típicamente una clase con un propósito bien definido que puede ser usada por un componente utilizando DI


BACKEND--HTTPClientModule
    EN app.module.ts    
        import { HttpClientModule } from '@angular/common/http';
        imports: [
    BrowserModule,
    AppRoutingModule,
    ReactiveFormsModule,
    HttpClientModule,
  ],

en consola CLI
    ng generate service services/transactions
me crea una carpeta services con 2 archivos